plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.2'
    id 'maven-publish'
}

group = 'team.rubyhorizon.lib'
version = rootProject.version

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
        name = "codemc-repo"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
}

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'
    implementation 'org.spongepowered:configurate-yaml:4.1.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    implementation('dev.jorel:commandapi-bukkit-shade:10.1.2')
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: rootProject.version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

configurations {
    shadowRuntime {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom configurations.implementation, configurations.runtimeOnly
    }
}

tasks.shadowJar {
    configurations = [project.configurations.shadowRuntime]
    archiveClassifier.set('all')
    relocate 'org.spongepowered.configurate', 'team.rubyhorizon.lib.configurate'
    relocate 'org.yaml.snakeyaml', 'team.rubyhorizon.lib.yaml'
    relocate 'dev.jorel.commandapi', 'team.rubyhorizon.lib.commandapi'
    relocate 'io.leangen.geantyref', 'team.rubyhorizon.lib.geantyref'
    mergeServiceFiles()
    manifest {
        attributes 'Implementation-Version': version
    }
}

artifacts {
    archives tasks.shadowJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/RubyHorizon/RubyHorizonLib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}