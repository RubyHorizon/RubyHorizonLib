plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.2'
}

group = 'team.rubyhorizon.lib'
version = '0.0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'
    implementation 'org.spongepowered:configurate-yaml:4.1.2'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

configurations {
    shadowRuntime {
        canBeResolved = true
        canBeConsumed = false
        extendsFrom configurations.implementation, configurations.runtimeOnly
    }
}

tasks.shadowJar {
    configurations = [project.configurations.shadowRuntime]
    archiveClassifier.set('all')
    relocate 'org.spongepowered.configurate', 'team.rubyhorizon.lib.configurate'
    mergeServiceFiles()
    manifest {
        attributes 'Implementation-Version': version
    }
}
